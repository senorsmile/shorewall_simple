---
# Loading vars
- name: Add the OS specific varibles
  include_vars: "{{ ansible_os_family }}.yml"

# Install Shorewall server
- name: Install the required  packages in Redhat derivatives
  yum:
    name: "{{ shorewall_package }}"
    state: present
  when: ansible_os_family == 'RedHat'
  notify: Restart Shorewall Service

- name: Install the required packages in Debian derivatives
  apt:
    name: "{{ shorewall_package }}"
    state: "present"
    update_cache: "yes"
    cache_valid_time: "3600"
  when: ansible_os_family == 'Debian'
  notify: Restart Shorewall Service

- name: Install the required packages in Arch derivatives
  pacman:
    name: "{{ shorewall_package }}"
    state: "present"
    update_cache: "yes"
  when: ansible_os_family == 'Archlinux'
  notify: Restart Shorewall Service

- name: Get version of shorewall
  shell: shorewall version
  check_mode: no
  changed_when: False
  register: get_shorewall_version

- set_fact:
    shorewall_version: "{{ get_shorewall_version.stdout }}"
    shorewall_docker_fix_needed: False # default to false

# http://shorewall.net/Docker.html
- set_fact:
    shorewall_docker_fix_needed: True
  when: shorewall_version is version('5.0.6', '<')

- name: Shorewall fix for docker - init
  template:
    src: init.j2
    dest: "{{ shorewall_init_file }}"
  notify: Restart Shorewall Service
  when: ( shorewall_version_fix_needed is defined and shorewall_version_fix_needed )

- name: Generate custom stopped rules
  template:
    src: "stoppedrules.j2"
    dest: "{{ shorewall_stoppedrules_file }}"
  notify: Restart Shorewall Service

- name: Generate custom stop script
  template:
    src: "stop.j2"
    dest: "{{ shorewall_stop_file }}"
  notify: Restart Shorewall Service

- name: Generate custom start script
  template:
    src: "start.j2"
    dest: "{{ shorewall_start_file }}"
  notify: Restart Shorewall Service

# Generate configuration
- name: Generate zones
  template:
    src: "zones.j2"
    dest: "{{ shorewall_zones_file }}"
  notify: Restart Shorewall Service

- name: Generate interfaces
  template:
    src: "interfaces.j2"
    dest: "{{ shorewall_interfaces_file }}"
  notify: Restart Shorewall Service

- name: Generate params
  template:
    src: "params.j2"
    dest: "{{ shorewall_params_file }}"
  notify: Restart Shorewall Service

- name: Generate policy
  template:
    src: "policy.j2"
    dest: "{{ shorewall_policy_file }}"
  notify: Restart Shorewall Service

- name: Generate rules
  template:
    src: "rules.j2"
    dest: "{{ shorewall_rules_file }}"
  notify: Restart Shorewall Service

- name: Generate mangle rules (tcrules)
  template:
    src: "tcrules.j2"
    dest: "{{ shorewall_tcrules_file }}"
  notify: Restart Shorewall Service

# pretty sure icmpdef is not need for shorewall v4 or v5
# https://shorewall.org/ping.html
#- name: Generate icmp ping definition
#  template:
#    src: icmpdef.j2
#    dest: "{{ shorewall_icmpdef_file }}"
#  notify: Restart Shorewall Service

- name: Generate shorewall.conf when < 5.0
  template:
    src: shorewall.conf.j2
    dest: "{{ shorewall_config_file }}"
  notify: Restart Shorewall Service
  when: ( shorewall_version is version( "5.0", "<" ) )

- name: Generate shorewall.conf when >= 5.0
  template:
    src: v5.shorewall.conf.j2
    dest: "{{ shorewall_config_file }}"
  notify: Restart Shorewall Service
  when: ( shorewall_version is version( "5.0", ">=" ) )

# Generate service configuration
- name: Generate Shorewall service conf
  template:
    src: "shorewall.j2"
    dest: "{{ shorewall_service_config }}"
    owner: "root"
    group: "root"
  notify: Restart Shorewall Service

## Reload service
#- name: Restart Shorewall service
#  service:
#    name: "{{ shorewall_service }}"
#    state: "restarted"

# Enable Shorewall server
- name: Start the  Shorewall service
  service:
    name: "{{ shorewall_service }}"
    enabled: "yes"

- name: Start the  Shorewall service
  service:
    name: "{{ shorewall_service }}"
    state: "started"
  register: shorewall_started
